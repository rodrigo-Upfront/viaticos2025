version: '3.8'

services:
  # PostgreSQL Database (Development/Testing)
  database:
    image: postgres:15-alpine
    container_name: viaticos_db
    environment:
      POSTGRES_DB: viaticos
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: viaticos2025
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - viaticos_network
    restart: unless-stopped

  # Python FastAPI Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: viaticos_backend
    environment:
      - DATABASE_URL=postgresql://postgres:viaticos2025@database:5432/viaticos
      - JWT_SECRET_KEY=viaticos_super_secret_key_2025_change_in_production
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=15
      - REFRESH_TOKEN_EXPIRE_DAYS=7
      - EMAIL_ENABLED=true
      - SMTP_SERVER=localhost
      - SMTP_PORT=587
      - SMTP_USERNAME=viaticos@company.com
      - SMTP_PASSWORD=change_me
      - SMTP_USE_TLS=true
      - UPLOAD_PATH=/app/storage/uploads
      - EXPORT_PATH=/app/storage/exports
      - MAX_FILE_SIZE=10485760

    ports:
      - "8000:8000"
    volumes:
      - ./storage:/app/storage
      - ./backend:/app
    depends_on:
      - database
    networks:
      - viaticos_network
    restart: unless-stopped
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: viaticos_frontend
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8000/api
      - REACT_APP_UPLOAD_MAX_SIZE=10485760
      - GENERATE_SOURCEMAP=true
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: ["sh", "-c", "npm install && npm start"]
    depends_on:
      - backend
    networks:
      - viaticos_network
    restart: unless-stopped
    stdin_open: true
    tty: true

volumes:
  postgres_data:
    driver: local

networks:
  viaticos_network:
    driver: bridge
